  const [numClick, setNumClick] = useState(0);
  const [numClickTwo, setNumClickTwo] = useState(10);

  useEffect(() => {
    let id = setTimeout(() => {
      alert(numClick);
    }, 2000);

    return () => {
      clearTimeout(id);
    };
  }, [numClick]);

  
  useEffect(() => {
    let id = setTimeout(() => {
      alert(numClick);
    }, 2000);

    return () => {
      clearTimeout(id);
    };
  }, [numClick]);

  <PushItemToList data={this.state.value}/>


    PushItemToList(props){
    const listItems = [props.data]
    return (
      <ul>{listItems}</ul>
    );
  }















import "./App.css";
import React, { useEffect } from "react";
import { useState } from "react";
import Search from "./search";

const App = () => {
  const [error, setError] = useState(null);
  const [isLoaded, setIsLoaded] = useState(false);
  const [items, setItems] = useState([]);

  useEffect(() => {
    fetch("https://api.example.com/items")
      .then(res => res.json())
      .then(
        (result) => {
          setIsLoaded(true);
          setItems(result);
        },
        // Note: it's important to handle errors here
        // instead of a catch() block so that we don't swallow
        // exceptions from actual bugs in components.
        (error) => {
          setIsLoaded(true);
          setError(error);
        }
      )
  }, [])

  return (
    <div className="App">
      <header className="App-header">
        <h3>RoboFriends</h3>
        <Search />

      </header>
    </div>
  );
};

export default App;
